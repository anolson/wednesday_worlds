name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    env:
      RAILS_ENV: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup test database
        run: bin/rails db:test:prepare

      - name: Run RSpec
        run: bin/rails spec

  staging-build:
    name: Build (staging)
    runs-on: ubuntu-latest
    needs: test

    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Login to Heroku container registry
        run: heroku container:login

      - name: Pull latest image (staging)
        run: heroku container:pull web --app=wednesdayworlds-staging

      - name: Build and push image (staging)
        run: heroku container:push web --app=wednesdayworlds-staging

      - name: Release image (staging)
        run: heroku container:release web --app=wednesdayworlds-staging

  production-build:
    name: Build (production)
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: test

    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Login to Heroku container registry
        run: heroku container:login

      - name: Pull latest image (production)
        run: heroku container:pull web --app=wednesdayworlds

      - name: Build and push image (production)
        run: heroku container:push web --app=wednesdayworlds
